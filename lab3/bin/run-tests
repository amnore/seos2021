#!/bin/bash

# Helper script to run tests

set -e

trap 'kill 0' INT

RED="\033[0;31m"
GREEN="\033[0;32m"
NOCOLOR="\033[0m"

ALL_TESTS=$(sed -nr 's/^DEFINE_TEST\((\w+)\).*$/\1/p' test/*.c)

while true; do
    case "$1" in
        "-l")
            echo "$ALL_TESTS"
            exit
            ;;
        "-d")
            ENABLE_LOG="$2"
            shift 2
            continue
            ;;
        "-s")
            RAND_SEED="$2"
            shift 2
            continue
            ;;
        *)
            break
            ;;
    esac
done

if [ -z "$1" ]; then
    RUN_TESTS="$ALL_TESTS"
else
    RUN_TESTS="$@"
fi

if [[ ! -v smp ]]; then
    export smp=4
fi

if [ -z "$RAND_SEED" ]; then
    RAND_SEED=$RANDOM
fi

case "$ARCH" in
    "");&
    "x86_64-qemu")
        TEST_BINARY="./build/kernel-x86_64-qemu-test"
        TEST_CMD="time -p qemu $TEST_BINARY -s -no-reboot"
        ;;
    "x86-qemu")
        TEST_BINARY="./build/kernel-x86-qemu-test"
        TEST_CMD="time -p qemu $TEST_BINARY -s -no-reboot"
        ;;
    "native")
        TEST_BINARY="./build/kernel-native-test"
        TEST_CMD="time -p $TEST_BINARY"
        ;;
esac

if [ ! -e "$TEST_BINARY" ]; then
    make test
fi

FAILED_TESTS=
for test in ${RUN_TESTS}; do
    tmpfile=$(mktemp)
    mainargs="run_test=${test} enable_log=${ENABLE_LOG}" $TEST_CMD | tee "$tmpfile"
    if grep -q "Test passed" "$tmpfile"; then
        echo -e "${GREEN}test \`${test}' passed${NOCOLOR}" 1>&2
    else
        echo -e "${RED}test \`${test}' failed${NOCOLOR}" 1>&2
        FAILED_TESTS+=" ${test}"
    fi
    rm "$tmpfile"
done

FAILED_TEST_NR=$(echo ${FAILED_TESTS} | wc -w)
echo -e "${GREEN}$(echo ${RUN_TESTS} | wc -w) tests runned, $(echo ${FAILED_TESTS} | wc -w) failed.${NOCOLOR}" 1>&2
if [ 0 -ne ${FAILED_TEST_NR} ]; then
    echo -e "failed tests:${RED} ${FAILED_TESTS} ${NOCOLOR}" 1>&2
fi

